-----BEGIN PGP SIGNED MESSAGE-----

content-type: text/plain; charset=us-ascii

Carl Ellison wrote:
> Let me propose an alternative unique name: the public key (or a good hash
> of it).  The public key has an advantage over both X.509 and PGP names.
> The binding between it and its human being is testable.  You can challenge
> the human in question to sign something.

I am extremely glad to hear Carl propose this. Let me propose something
just a bit more concrete (Carl might not like it because it contains just
a hint of ASN.1, but what the hell).

I propose that the unique name be the MD5 hash of the MOSS public key, as
formatted according to the MOSS specification (ASCII and all). PGP keys
can easily be converted into MOSS ones, so it's pretty easy. The hash
should be expressed as 32 hex digits, so that it can easily be typed in
or spoken. The only ambiguity in this proposal is where to put the
newlines, if any. For concreteness, I propose that there be no newlines
in the public key value.

To make sure everybody gets my drift, there is an example public key in the
MOSS spec. It looks like this:

    PK,MHkwCgYEVQgBAQICAwADawAwaAJhAMAHQ45ywA357G4fqQ61aoC1fO6BekJmG
    4475mJkwGIUxvDkwuxe/EFdPkXDGBxzdGrW1iuh5K8kl8KRGJ9wh1HU4TrghGdhn
    0Lw8gG67Dmb5cBhY9DGwq0CDnrpKZV3cQIDAQAB

All of the blanks and newlines are removed, and the MD5 hash taken of the
resulting file. The hash is:

    028eafd551354cbe460d4a83102ad25b

This should also be a MOSS name form, as follows:

    UN,028eafd551354cbe460d4a83102ad25b

We should lobby to get this new name form accepted in MOSS. Also, the next
version of PGP should accept the hash as a valid index into the keyring.

The extension to MOSS syntax is as follows:

    <id>            ::=   <id-email> / <id-string>    / <id-dname>
                        / <id-publickey> / <id-issuer> / <id-unique>

    <id-unique>     ::= "UN" "," <unique-name> CRLF

    <unique-name>   ::= 32*32<hexchar>

If I had just a touch more time, I would volunteer to write a Perl script
that would do all the conversions automatically. Any takers?

As Carl points out, public keys are not magic - you need to start somewhere.
The problem with X.509 and also the PGP web of trust model is making the
start difficult, presumably to encourage people to use the mechanism. We
should make the starting point as easy to use as possible. I can put a 32
digit hex value on my business card, checkbook, and letterhead. Try that
with a certificate!

One advantage of this scheme is that a database mapping unique names to
full public keys need not be trusted - it is easy to do a sanity check to
make sure the unique name really does correspond to the key.

Getting this right will help the cause of free crypto quite a bit.

Raph


-----BEGIN PGP SIGNATURE-----
Version: 2.6.2

iQBFAwUBMHAdomRuKj5D5x2JAQEHmwF8Cvmlbvxy1g7d2WLv72jJFLPSIAtgq3Ce
SJRMF/9LnzHaGwx06Ud7Oigjhir5USc7
=vYD2
-----END PGP SIGNATURE-----

